import requests
from bs4 import BeautifulSoup
import re
from urllib.parse import urljoin, urlparse

class WebVulnerabilityScanner:
    def __init__(self, target_url):
        self.target_url = target_url
        self.session = requests.Session()

    def send_request(self, url):
        """Send a GET request to the URL and return the response."""
        try:
            response = self.session.get(url, timeout=10)
            return response
        except requests.exceptions.RequestException as e:
            print(f"Error: {e}")
            return None

    def check_sql_injection(self, url):
        """Check if the URL is vulnerable to SQL Injection."""
        payload = "' OR 1=1 --"
        test_url = f"{url}{payload}"
        response = self.send_request(test_url)

        if response and "error" in response.text.lower():
            print(f"Potential SQL Injection vulnerability detected at: {url}")
        else:
            print(f"No SQL Injection vulnerability found at: {url}")

    def check_xss(self, url):
        """Check if the URL is vulnerable to XSS."""
        payload = "<script>alert('XSS')</script>"
        test_url = f"{url}{payload}"
        response = self.send_request(test_url)

        if response and payload in response.text:
            print(f"Potential XSS vulnerability detected at: {url}")
        else:
            print(f"No XSS vulnerability found at: {url}")

    def check_csrf(self, url):
        """Check if forms on the page lack CSRF protection."""
        response = self.send_r
