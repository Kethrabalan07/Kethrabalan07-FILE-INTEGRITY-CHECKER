import socket
import threading

class PortScanner:
    def __init__(self, target, port_range):
        self.target = target
        self.port_range = port_range
        self.open_ports = []

    def scan_port(self, port):
        """Scan a single port to check if it's open."""
        try:
            sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            sock.settimeout(1)
            result = sock.connect_ex((self.target, port))
            if result == 0:
                self.open_ports.append(port)
            sock.close()
        except Exception as e:
            pass

    def scan(self):
        """Scan a range of ports and return the open ones."""
        threads = []
        for port in range(1, self.port_range + 1):
            thread = threading.Thread(target=self.scan_port, args=(port,))
            thread.start()
            threads.append(thread)

        for thread in threads:
            thread.join()

        return self.open_ports



if __name__ == "__main__":
    target_ip = "127.0.0.1"  # Example IP
    port_range = 1000  # Scan first 1000 ports

    scanner = PortScanner(target_ip, port_range)
    open_ports = scanner.scan()

    print(f"Open ports on {target_ip}: {open_ports}")
